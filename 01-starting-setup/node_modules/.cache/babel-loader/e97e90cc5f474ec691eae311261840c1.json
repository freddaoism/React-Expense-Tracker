{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\React Expense Tracker\\\\01-starting-setup\\\\src\\\\components\\\\Chart\\\\ChartBar.js\";\nimport React from \"react\";\nimport \"./ChartBar.css\"; //defining component ChartBar setting it equal to props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartBar = props => {\n  //JSX Code goes down here\n  let barFillHeight = '0%';\n\n  if (props.max > 0) {\n    barFillHeight = Math.round(props.value / props.maxValue * 100) + '%';\n  }\n\n  return (\n    /*#__PURE__*/\n    // calls for 'chart-bar from the CSS File\n    _jsxDEV(\"div\", {\n      className: \"chart-bar\",\n      children: [\"//nested in here we have a few other divs that style different elements of the chart//\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bar__fill\",\n          style: {\n            height: barFillHeight\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bar__label\",\n          children: props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n}; //exporting ChartBar\n\n\n_c = ChartBar;\nexport default ChartBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/React Expense Tracker/01-starting-setup/src/components/Chart/ChartBar.js"],"names":["React","ChartBar","props","barFillHeight","max","Math","round","value","maxValue","height","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB;AACF,MAAIC,aAAa,GAAG,IAApB;;AAEA,MAAID,KAAK,CAACE,GAAN,GAAY,CAAhB,EAAkB;AACdD,IAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,GAAcL,KAAK,CAACM,QAArB,GAAiC,GAA5C,IAAmD,GAAnE;AACH;;AAED;AAAA;AACI;AACF;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,wHAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AACA,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAEN;AAAT,WADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBAAmCD,KAAK,CAACQ;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAWD,CAnBD,C,CAqBA;;;KArBMT,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\n//defining component ChartBar setting it equal to props\r\nconst ChartBar = (props) => {\r\n    //JSX Code goes down here\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.max > 0){\r\n      barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n    \r\n  return (\r\n      // calls for 'chart-bar from the CSS File\r\n    <div className=\"chart-bar\">\r\n        //nested in here we have a few other divs that style different elements of the chart//\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" \r\n        style={{height: barFillHeight}}> </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//exporting ChartBar\r\nexport default ChartBar;\r\n"]},"metadata":{},"sourceType":"module"}